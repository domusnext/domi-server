name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 安装pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: 安装依赖
      run: pnpm install
      
    - name: 代码格式检查
      run: pnpm run lint
      
    - name: 运行测试
      run: pnpm run test
      
    - name: 运行端到端测试
      run: pnpm run test:e2e

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 安装pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: 安装依赖
      run: pnpm install
      
    - name: 构建项目
      run: pnpm run build
      
    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          dist/
          node_modules/
          package.json
          pnpm-lock.yaml

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 下载构建产物
      uses: actions/download-artifact@v4
      with:
        name: build-files
        
    - name: 部署到服务器
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          # 停止现有服务
          pm2 stop ttc-be || true
          
          # 备份当前版本
          if [ -d "/var/www/ttc-be" ]; then
            mv /var/www/ttc-be /var/www/ttc-be-backup-$(date +%Y%m%d_%H%M%S)
          fi
          
          # 创建新的部署目录
          mkdir -p /var/www/ttc-be
          cd /var/www/ttc-be
          
          # 拉取最新代码
          git clone https://github.com/${{ github.repository }}.git .
          
          # 设置Node.js环境
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm use 18
          
          # 安装pnpm
          npm install -g pnpm
          
          # 安装依赖
          pnpm install --prod
          
          # 构建项目
          pnpm run build
          
          # 设置环境变量
          cp .env.example .env || true
          
          # 启动服务
          pm2 start dist/main.js --name ttc-be
          
          # 保存PM2配置
          pm2 save
          
          # 清理旧的备份文件（保留最近5个）
          find /var/www -name "ttc-be-backup-*" -type d | sort -r | tail -n +6 | xargs rm -rf || true 